# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = matbench-genmetrics
description = Generative materials benchmarking metrics, inspired by CDVAE.
author = sgbaird
author_email = sterling.baird@utah.edu
license = MIT
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/sparks-baird/matbench-genmetrics/
# Add here related links, for example:
project_urls =
    Documentation = https://matbench-genmetrics.readthedocs.io
    Source = https://github.com/sparks-baird/matbench-genmetrics
    Changelog = https://matbench-genmetrics.readthedocs.io/latest/changelog.html
    Tracker = https://github.com/sparks-baird/matbench-genmetrics/issues
    Conda-Forge = https://anaconda.org/conda-forge/matbench-genmetrics
    Download = https://pypi.org/project/matbench-genmetrics/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.6

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.8"
    numpy
    pandas
    scipy
    scikit-learn
    pymatgen
    pyxtal
    pystow
    element-coder
    pymatviz
    matminer
    pybtex
    typing-extensions
    ruamel.yaml<0.18
    # smact
    # hydra-core
    # torch
    # torch-geometric


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install matbench-genmetrics[PDF]` like:
api =
    mp-api; python_version>="3.8"

dev =
    conda-souschef
    grayskull
    pydocstyle
    mypy
    flake8
    black
    ipykernel
    pre-commit

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov
    mp-api

[options.entry_points]
console_scripts =
    matbench-genmetrics = matbench_genmetrics.core.core:run
    matbench_genmetrics = matbench_genmetrics.core.core:run
    mp-time-split = matbench_genmetrics.mp_time_split.core:run
    mp_time_split = matbench_genmetrics.mp_time_split.core:run

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov
    # maybe unnecessary line, https://github.com/pytest-dev/pytest-cov/issues/289
    # --include matbench_genmetrics.core, matbench_genmetrics.mp_time_split
    --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.4.1
package = core
extensions =
    dsproject
    github_actions
    markdown
    namespace
    no_skeleton
    pre_commit
namespace = matbench_genmetrics
